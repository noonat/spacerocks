// Vector text rendering helpers.

'use strict';

import * as game from './game';
import * as local from './local';

// This is a big object containing arrays of lines for each letter / number.
export const chars = {
  'A': [
    [0.0, 1.0,
     0.0, 0.25,
     0.5, 0.0,
     1.0, 0.25,
     1.0, 1.0],
    [0.0, 0.75,
     1.0, 0.75]],
  'B': [ // b sucks
    [0.75, 0.50,
     0.00, 0.50,
     0.00, 0.00,
     0.75, 0.00,
     1.00, 0.16,
     1.00, 0.32,
     0.75, 0.50,
     1.00, 0.66,
     1.00, 0.83,
     0.75, 1.00,
     0.00, 1.00,
     0.00, 0.50]],
  'C': [
    [1.0, 0.0,
     0.0, 0.0,
     0.0, 1.0,
     1.0, 1.0]],
  'D': [
    [0.0, 0.0,
     0.5, 0.0,
     1.0, 0.33,
     1.0, 0.66,
     0.5, 1.0,
     0.0, 1.0,
     0.0, 0.0]],
  'E': [
    [1.0, 0.0,
     0.0, 0.0,
     0.0, 1.0,
     1.0, 1.0],
    [0.0, 0.5,
     0.75, 0.5]],
  'F': [
    [1.0, 0.0,
     0.0, 0.0,
     0.0, 1.0],
    [0.0, 0.5,
     0.75, 0.5]],
  'G': [
    [1.0, 0.25,
     1.0, 0.0,
     0.0, 0.0,
     0.0, 1.0,
     1.0, 1.0,
     1.0, 0.66,
     0.5, 0.66]],
  'H': [
    [0.0, 0.0,
     0.0, 1.0],
    [1.0, 0.0,
     1.0, 1.0],
    [0.0, 0.5,
     1.0, 0.5]],
  'I': [
    [0.0, 0.0,
     1.0, 0.0],
    [0.0, 1.0,
     1.0, 1.0],
    [0.5, 0.0,
     0.5, 1.0]],
  'J': [
    [1.0, 0.0,
     1.0, 1.0,
     0.5, 1.0,
     0.0, 0.66]],
  'K': [
    [0.0, 0.0,
     0.0, 0.5,
     1.0, 0.0],
    [0.0, 1.0,
     0.0, 0.5,
     1.0, 1.0]],
  'L': [
    [0.0, 0.0,
     0.0, 1.0,
     1.0, 1.0]],
  'M': [
    [0.0, 1.0,
     0.0, 0.0,
     0.5, 0.33,
     1.0, 0.0,
     1.0, 1.0]],
  'N': [
    [0.0, 1.0,
     0.0, 0.0,
     1.0, 1.0,
     1.0, 0.0]],
  'O': [
    [0.0, 0.0,
     1.0, 0.0,
     1.0, 1.0,
     0.0, 1.0,
     0.0, 0.0]],
  'P': [
    [0.0, 0.5,
     0.0, 0.0,
     1.0, 0.0,
     1.0, 0.5,
     0.0, 0.5,
     0.0, 1.0]],
  'Q': [
    [0.0, 0.0,
     1.0, 0.0,
     1.0, 0.66,
     0.5, 1.0,
     0.0, 1.0,
     0.0, 0.0],
    [0.5, 0.66,
     1.0, 1.0]],
  'R': [
    [0.0, 0.5,
     0.0, 0.0,
     1.0, 0.0,
     1.0, 0.5,
     0.0, 0.5,
     0.0, 1.0],
    [0.25, 0.5,
     1.0, 1.0]],
  'S': [
    [1.0, 0.0,
     0.0, 0.0,
     0.0, 0.5,
     1.0, 0.5,
     1.0, 1.0,
     0.0, 1.0]],
  'T': [
    [0.0, 0.0,
     1.0, 0.0],
    [0.5, 0.0,
     0.5, 1.0]],
  'U': [
    [0.0, 0.0,
     0.0, 1.0,
     1.0, 1.0,
     1.0, 0.0]],
  'V': [
    [0.0, 0.0,
     0.5, 1.0,
     1.0, 0.0]],
  'W': [
    [0.0, 0.0,
     0.0, 1.0,
     0.5, 0.66,
     1.0, 1.0,
     1.0, 0.0]],
  'X': [
    [0.0, 0.0,
     1.0, 1.0],
    [1.0, 0.0,
     0.0, 1.0]],
  'Y': [
    [0.0, 0.0,
     0.5, 0.33,
     0.5, 1.0],
    [0.5, 0.33,
     1.0, 0.0]],
  'Z': [
    [0.0, 0.0,
     1.0, 0.0,
     0.0, 1.0,
     1.0, 1.0]],
  '0': [
    [0.0, 0.0,
     1.0, 0.0,
     1.0, 1.0,
     0.0, 1.0,
     0.0, 0.0],
    [1.0, 0.0,
     0.0, 1.0]],
  '1': [
    [0.0, 0.2,
     0.5, 0.0,
     0.5, 1.0],
    [0.0, 1.0,
     1.0, 1.0]],
  '2': [
    [0.0, 0.0,
     1.0, 0.0,
     1.0, 0.5,
     0.0, 0.5,
     0.0, 1.0,
     1.0, 1.0]],
  '3': [
    [0.0, 0.0,
     1.0, 0.0,
     1.0, 1.0,
     0.0, 1.0],
    [0.0, 0.5,
     1.0, 0.5]],
  '4': [
    [0.0, 0.0,
     0.0, 0.5,
     1.0, 0.5],
    [1.0, 0.0,
     1.0, 1.0]],
  '5': [
    [1.0, 0.0,
     0.0, 0.0,
     0.0, 0.5,
     1.0, 0.5,
     1.0, 1.0,
     0.0, 1.0]],
  '6': [
    [1.0, 0.0,
     0.0, 0.0,
     0.0, 1.0,
     1.0, 1.0,
     1.0, 0.5,
     0.0, 0.5]],
  '7': [
    [0.0, 0.0,
     1.0, 0.0,
     1.0, 1.0]],
  '8': [
    [0.0, 0.5,
     0.0, 0.0,
     1.0, 0.0,
     1.0, 0.5,
     0.0, 0.5,
     0.0, 1.0,
     1.0, 1.0,
     1.0, 0.5]],
  '9': [
    [1.0, 0.5,
     0.0, 0.5,
     0.0, 0.0,
     1.0, 0.0,
     1.0, 1.0]],
  ':': [
    [0.5, 0.2,
     0.5, 0.3],
    [0.5, 0.7,
     0.5, 0.8]]
};

// Draw an individual character.
export function drawChar(ch, x, y, w, h) {
  let lines = chars[ch];
  if (!lines) {
    return;
  }
  for (let i = 0, il = lines.length; i < il; i++) {
    let line = lines[i];
    for (let j = 0, jl = line.length; j < jl; j += 2) {
      let px = x + line[j + 0] * w;
      let py = y + line[j + 1] * h;
      if (j === 0) {
        local.context.moveTo(px, py);
      } else {
        local.context.lineTo(px, py);
      }
    }
  }
}

// Draw a string of characters.
export function drawString(string, x, y, charWidth, charSpacing, charHeight) {
  string = string.toUpperCase();
  for (let i = 0, il = string.length; i < il; i++) {
    let ch = string.charAt(i);
    drawChar(ch, x + (i * charSpacing), y, charWidth, charHeight);
  }
}

// Draw a string of characters, centered horizontally and vertically.
export function drawCenteredString(string, charWidth, charSpacing, charHeight,
                                   x, y) {
  x = x || 0;
  y = y || 0;
  x += (game.width - (charSpacing * (string.length - 1) + charWidth)) / 2;
  y += (game.height - charHeight) / 2;
  return drawString(string, x, y, charWidth, charSpacing, charHeight);
}
